stages:
  - build

variables:
  GIT_SUBMODULE_STRATEGY: recursive

windows_client:
  stage: build
  tags:
    - windows
  dependencies: []
  script:
    - cmake -S . -B build-windows-client -A x64,version=8.1 -T v142 -DBUILD_GROUP=game -DCMAKE_BUILD_TYPE="Release" -DBUILD_64BIT=ON -DBUILD_VPHYSICS=ON -DBUILD_VPHYSICS_TYPE="IVP" -DCMAKE_SYSTEM_VERSION="8.1" -DBUILD_FOLDER=tf2classic -DBUILD_FOR_PUBLIC_USE=ON
    - cmake --build build-windows-client --config Release
    - cmake --install build-windows-client --config Release
  artifacts:
    name: "winclient-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
    - game_tf2classic
    exclude:
    - "game_tf2classic/*.pdb"
    - "game_tf2classic/*.lib"
    - "game_tf2classic/bin/*.pdb"
    - "game_tf2classic/bin.*.lib"
    - "game_tf2classic/tf2classic/bin/*.pdb"
    - "game_tf2classic/tf2classic/bin/*.lib"

linux_client:
  image: "registry.gitlab.steamos.cloud/steamrt/sniper/sdk"
  stage: build
  tags:
    - linux
  dependencies: []
  script:
    - export CCACHE_COMPILERCHECK=content
    - cmake -S . -B build-linux-client -G "Unix Makefiles" -DBUILD_GROUP=game -DCMAKE_BUILD_TYPE="Release" -DBUILD_64BIT=ON -DBUILD_VPHYSICS=ON -DBUILD_VPHYSICS_TYPE="IVP" -DBUILD_FOLDER=tf2classic -DBUILD_FOR_PUBLIC_USE=ON
    - cmake --build build-linux-client -j$(nproc --all) --config Release
    - cmake --install build-linux-client --config Release
    - strip --strip-unneeded --remove-section=.comment game_tf2classic/hl2_linux game_tf2classic/*/*.so game_tf2classic/*/*/*.so
  cache:
    key: ccache-$CI_COMMIT_REF_NAME-$CI_JOB_NAME
    paths:
      - ../.ccache
  artifacts:
    name: "linclient-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
    - game_tf2classic
    exclude:
    - "game_tf2classic/*.dbg"
    - "game_tf2classic/*.a"
    - "game_tf2classic/bin/*.dbg"
    - "game_tf2classic/bin/*.a"
    - "game_tf2classic/tf2classic/bin/*.dbg"
    - "game_tf2classic/tf2classic/bin/*.a"

linux_server:
  image: "registry.gitlab.steamos.cloud/steamrt/sniper/sdk"
  stage: build
  tags:
    - linux
  dependencies: []
  script:
    - export CCACHE_COMPILERCHECK=content
    - cmake -S . -B build-linux-server -G "Unix Makefiles" -DBUILD_GROUP=dedicated -DDEDICATED=1 -DCMAKE_BUILD_TYPE="Release" -DBUILD_64BIT=ON -DBUILD_VPHYSICS=ON -DBUILD_VPHYSICS_TYPE="IVP" -DBUILD_FOLDER=tf2classic -DGAMEDIR="$PWD/game_tf2classic_dedicated" -DBUILD_FOR_PUBLIC_USE=ON
    - cmake --build build-linux-server -j$(nproc --all) --config Release
    - cmake --install build-linux-server --config Release
    - strip --strip-unneeded --remove-section=.comment game_tf2classic_dedicated/srcds_linux game_tf2classic_dedicated/*/*.so game_tf2classic_dedicated/*/*/*.so
  cache:
    key: ccache-$CI_COMMIT_REF_NAME-$CI_JOB_NAME
    paths:
      - ../.ccache
  artifacts:
    name: "linserver-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
    - game_tf2classic_dedicated
    exclude:
    - "game_tf2classic_dedicated/*.dbg"
    - "game_tf2classic_dedicated/*.a"
    - "game_tf2classic_dedicated/bin/*.dbg"
    - "game_tf2classic_dedicated/bin/*.a"
    - "game_tf2classic_dedicated/tf2classic/bin/*.dbg"
    - "game_tf2classic_dedicated/tf2classic/bin/*.a"

linux_aarch64_client:
  image: "debian:bookworm"
  stage: build
  tags:
    - linux_aarch64
  dependencies: []
  script:
    - apt update
    - apt upgrade -y
    - apt install cmake build-essential g++ libssl-dev libcurl4-openssl-dev libbz2-dev libopenal-dev ccache libfreetype6-dev libfontconfig-dev libsdl2-dev libjpeg-dev libpng-dev git clang -y
    - export CCACHE_COMPILERCHECK=content
    - cmake -S . -B build-linux_aarch64-client -G "Unix Makefiles" -DBUILD_GROUP=game -DCMAKE_BUILD_TYPE="Release" -DBUILD_64BIT=ON -DBUILD_VPHYSICS=ON -DBUILD_VPHYSICS_TYPE="IVP" -DBUILD_FOLDER=tf2classic -DBUILD_FOR_PUBLIC_USE=ON -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
    - cmake --build build-linux_aarch64-client -j$(nproc --all) --config Release
    - cmake --install build-linux_aarch64-client --config Release
    - strip --strip-unneeded --remove-section=.comment game_tf2classic/hl2_linux game_tf2classic/*/*.so game_tf2classic/*/*/*.so
  cache:
    key: ccache-$CI_COMMIT_REF_NAME-$CI_JOB_NAME
    paths:
      - ../.ccache
  artifacts:
    name: "aarch64-linclient-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
    - game_tf2classic
    exclude:
    - "game_tf2classic/*.dbg"
    - "game_tf2classic/*.a"
    - "game_tf2classic/bin/*.dbg"
    - "game_tf2classic/bin/*.a"
    - "game_tf2classic/tf2classic/bin/*.dbg"
    - "game_tf2classic/tf2classic/bin/*.a"

android32_client:
  image: "registry.worldspawn.party:5050/tf2classic-android/docker_android_sdk:master"
  stage: build
  tags:
    - linux
  dependencies: []
  script:
    - export CCACHE_COMPILERCHECK=content
    - export ANDROID_NDK_HOME="/opt/android-ndk-r25c"
    - export ANDROID_PLATFORM_VERSION=26
    - export ANDROID_PLATFORM="android-$ANDROID_PLATFORM_VERSION"
    - export ANDROID_ARCH="armeabi-v7a"
    - export _CMAKE_SOURCE_ENGINE_FLAGS="-DBUILD_GROUP=game -DCMAKE_BUILD_TYPE=Release -DBUILD_64BIT=OFF -DBUILD_VPHYSICS=ON -DBUILD_VPHYSICS_TYPE=IVP -DBUILD_FOLDER=tf2classic -DENABLE_TOGLES=ON -DBUILD_FOR_PUBLIC_USE=ON -DDISABLE_WARNINGS=ON -DGAMEDIR=$PWD/game_tf2classic_android32"
    - export _CMAKE_ANDROID_FLAGS="-DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=$ANDROID_PLATFORM_VERSION -DANDROID_PLATFORM=$ANDROID_PLATFORM -DANDROID_ABI=$ANDROID_ARCH -DCMAKE_ANDROID_ARCH_ABI=$ANDROID_ARCH -DANDROID_NDK=$ANDROID_NDK_HOME -DCMAKE_ANDROID_NDK=$ANDROID_NDK_HOME -DANDROID_ARM_MODE=arm -DCMAKE_ANDROID_ARM_MODE=arm -DANDROID_LD=lld -DCMAKE_ANDROID_LD=lld"
    - cmake -S . -B build_android32 -G "Unix Makefiles" $_CMAKE_SOURCE_ENGINE_FLAGS $_CMAKE_ANDROID_FLAGS $@
    - cmake --build build_android32 -j$(nproc --all) --config Release
    - cmake --install build_android32 --config Release
    - $ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip game_tf2classic_android32/bin/*.so game_tf2classic_android32/tf2classic/bin/*.so
  cache:
    key: ccache-$CI_COMMIT_REF_NAME-$CI_JOB_NAME
    paths:
      - ../.ccache
  artifacts:
    name: "droidclient32-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
    - game_tf2classic_android32

android64_client:
  image: "registry.worldspawn.party:5050/tf2classic-android/docker_android_sdk:master"
  stage: build
  tags:
    - linux
  dependencies: []
  script:
    - export CCACHE_COMPILERCHECK=content
    - export ANDROID_NDK_HOME="/opt/android-ndk-r25c"
    - export ANDROID_PLATFORM_VERSION=26
    - export ANDROID_PLATFORM="android-$ANDROID_PLATFORM_VERSION"
    - export ANDROID_ARCH="arm64-v8a"
    - export _CMAKE_SOURCE_ENGINE_FLAGS="-DBUILD_GROUP=game -DCMAKE_BUILD_TYPE=Release -DBUILD_64BIT=ON -DBUILD_VPHYSICS=ON -DBUILD_VPHYSICS_TYPE=IVP -DBUILD_FOLDER=tf2classic -DENABLE_TOGLES=ON -DBUILD_FOR_PUBLIC_USE=ON -DDISABLE_WARNINGS=ON -DGAMEDIR=$PWD/game_tf2classic_android64"
    - export _CMAKE_ANDROID_FLAGS="-DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=$ANDROID_PLATFORM_VERSION -DANDROID_PLATFORM=$ANDROID_PLATFORM -DANDROID_ABI=$ANDROID_ARCH -DCMAKE_ANDROID_ARCH_ABI=$ANDROID_ARCH -DANDROID_NDK=$ANDROID_NDK_HOME -DCMAKE_ANDROID_NDK=$ANDROID_NDK_HOME -DANDROID_LD=lld -DCMAKE_ANDROID_LD=lld"
    - cmake -S . -B build_android64 -G "Unix Makefiles" $_CMAKE_SOURCE_ENGINE_FLAGS $_CMAKE_ANDROID_FLAGS $@
    - cmake --build build_android64 -j$(nproc --all) --config Release
    - cmake --install build_android64 --config Release
    - $ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip game_tf2classic_android64/bin/*.so game_tf2classic_android64/tf2classic/bin/*.so
  cache:
    key: ccache-$CI_COMMIT_REF_NAME-$CI_JOB_NAME
    paths:
      - ../.ccache
  artifacts:
    name: "droidclient64-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
    - game_tf2classic_android64
